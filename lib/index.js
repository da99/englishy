// Generated by CoffeeScript 1.3.3
(function() {
  var Englishy, emitter, events;

  events = require('events');

  emitter = new events.EventEmitter();

  if (!Array.prototype.last) {
    Array.prototype.last = function(n) {
      n = typeof n !== 'undefined' ? n : 1;
      return this[this.length - n];
    };
  }

  Englishy = (function() {

    function Englishy(str) {
      this.HEAD_WHITE_SPACE = /^\s/;
      this.END_PERIOD = /\.$/;
      this.END_COLON = /\:$/;
      this.string = str.replace(/\t/, "  ").replace(/\r/, "");
      this.lines = [];
      this.error = null;
      this.parse();
    }

    Englishy.prototype.record_error = function(msg) {
      var err;
      err = new Error(msg);
      err.msg = msg;
      this.lines = err;
      return this.error = this.lines;
    };

    Englishy.prototype.last_error = function() {
      return this.error;
    };

    Englishy.prototype.last_line = function() {
      var last;
      last = this.lines.last();
      return last && last[0];
    };

    Englishy.prototype.last_block = function() {
      var last;
      last = this.lines.last();
      return last && last[1];
    };

    Englishy.prototype.append_to_line = function(l) {
      return this.lines.last()[0] = "" + (this.last_line()) + " " + l;
    };

    Englishy.prototype.append_to_block = function(l) {
      return this.lines.last()[1] += l;
    };

    Englishy.prototype.push_new_line = function(l) {
      var pair;
      pair = this.start_of_block(l) ? [l, ""] : [l, null];
      return this.lines.push(pair);
    };

    Englishy.prototype.array = function() {
      return this.lines;
    };

    Englishy.prototype.in_sentence = function() {
      var l;
      if (!this.last_line()) {
        return false;
      }
      if (this.in_block()) {
        return false;
      }
      l = this.strip(this.last_line());
      return !(this.END_PERIOD.test(l));
    };

    Englishy.prototype.in_block = function() {
      return this.last_block() !== null;
    };

    Englishy.prototype.start_of_block = function(line) {
      return this.END_COLON.test(this.strip(line));
    };

    Englishy.prototype.full_sentence = function(line) {
      return this.END_PERIOD.test(this.strip(line));
    };

    Englishy.prototype.remove_indentation = function(str) {
      var final, indent, indent_meta, l, lines;
      if (this.strip(str) === "") {
        return "";
      }
      lines = this.strip_beginning_empty_lines(str).split("\n");
      indent_meta = this.HEAD_WHITE_SPACE.exec(lines[0]);
      if (!indent_meta) {
        return lines.join("\n");
      }
      indent = indent_meta[0];
      final = (function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = lines.length; _i < _len; _i++) {
          l = lines[_i];
          _results.push(l.replace(indent, ""));
        }
        return _results;
      })();
      return final.join("\n");
    };

    Englishy.prototype.strip_beginning_empty_lines = function(str) {
      var lines;
      if (this.strip(str) === "") {
        return "";
      }
      lines = str.split("\n");
      while (lines[0] && (this.strip(lines[0]) === "")) {
        lines.shift();
      }
      return lines.join("\n");
    };

    Englishy.prototype.strip = function(str) {
      return str.replace(/^\s+|\s+$/g, '');
    };

    Englishy.prototype.is_empty = function(str) {
      return this.strip(str).length === 0;
    };

    Englishy.prototype.strip_empty = function(line) {
      return line.length > 1;
    };

    Englishy.prototype._process_line = function(raw_l) {
      var begins_with_whitespace, l, line;
      line = raw_l;
      l = this.strip(raw_l);
      if (this.is_empty(l) && this.in_block() && this.last_block() === '') {
        return null;
      }
      if (this.is_empty(l) && !this.in_block() && !this.in_sentence()) {
        return null;
      }
      begins_with_whitespace = this.HEAD_WHITE_SPACE.test(line);
      if (this.in_block() && (begins_with_whitespace || this.is_empty(l))) {
        this.append_to_block(line + "\n");
        return line;
      }
      if (!this.in_sentence() && (this.start_of_block(l) || this.full_sentence(l))) {
        this.push_new_line(l);
        return l;
      }
      if (this.in_sentence()) {
        if (this.start_of_block(l)) {
          return this.record_error("Incomplete sentence before block: " + (this.last_line()));
        }
        return this.append_to_line(line);
      }
      if (!this.in_block() && !this.full_sentence(l)) {
        return this.push_new_line(line);
      }
      return this.unknown_fragment(line);
    };

    Englishy.prototype.unknown_fragment = function(l) {
      return this.record_error("Unknown fragment: " + l);
    };

    Englishy.prototype.parse = function() {
      var raw_lines;
      raw_lines = this.remove_indentation(this.string).split("\n");
      while ((this.error === null) && raw_lines.length > 0) {
        this._process_line(raw_lines.shift());
      }
      if (this.lines.last && this.in_sentence()) {
        this.unknown_fragment(this.last_line());
      }
      return this.lines;
    };

    return Englishy;

  })();

  exports.Englishy = Englishy;

}).call(this);
